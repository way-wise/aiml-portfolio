export interface PortfolioItem {
  id: string;
  title: string;
  description: string;
  category: string;
  highlightKeyword?: string;
  image: string;
  technologies: string[];
  demoUrl?: string;
  githubUrl?: string;
  completionDate?: string;
  longDescription?: string;
  features?: string[];
  process?: string;
}

export const portfolioItems: PortfolioItem[] = [
  {
    id: "ml-0",
    title: "Predictive Maintenance System",
    description:
      "Predictive Maintenance System for manage users and products and analytics.",
    category: "machine-learning",
    highlightKeyword: "Machine Learning",
    image: "/ai/pd2.png",
    technologies: ["Python", "TensorFlow", "PostgreSQL"],
    demoUrl: "https://example.com/demo",
    githubUrl: "https://github.com/example/project",
    completionDate: "August 2023",
    features: [
      "Real-time message delivery",
      "User presence detection",
      "Message history storage",
      "End-to-end encryption",
    ],
  },

  {
    id: "ml-1",
    title: "Advanced Sentiment Analysis System",
    description:
      "Revolutionized customer feedback analysis with multi-domain sentiment classification, sarcasm detection, and real-time analytics.",
    category: "machine-learning",
    highlightKeyword: "Machine Learning",
    image: "/ai/ml1.png",
    technologies: [
      "Python",
      "PyTorch",
      "FastAPI",
      "Hugging Face",
      "PostgreSQL",
      "Docker",
    ],
    demoUrl: "https://example.com/sentiment-demo",
    githubUrl: "https://github.com/example/sentiment-analysis",
    completionDate: "June 2023",
    features: [
      "Multi-domain sentiment classification (92% accuracy)",
      "Sarcasm detection (85% accuracy)",
      "Real-time processing pipeline",
      "Aspect-based sentiment analysis",
      "REST API integration",
      "Custom visualization dashboard",
    ],
  },

  {
    id: "ml-2",
    title: "Multilingual Text Summarization",
    description:
      "Developed a multilingual summarization system supporting 5 languages with real-time abstractive and extractive capabilities.",
    category: "machine-learning",
    highlightKeyword: "Natural Language Processing",
    image: "/ai/ml2.png",
    technologies: [
      "Python",
      "TensorFlow",
      "spaCy",
      "NLTK",
      "Flask",
      "MongoDB",
      "Docker",
    ],
    demoUrl: "https://example.com/summarization-demo",
    githubUrl: "https://github.com/example/multilingual-summarization",
    completionDate: "May 2023",
    features: [
      "Cross-lingual summarization (5 languages)",
      "Abstractive and extractive summarization",
      "Language detection and preprocessing",
      "Custom quality metrics and evaluation",
      "Batch processing capability",
      "API integration",
    ],
  },

  {
    id: "ml-3",
    title: "Question Answering System",
    description:
      "Built an intelligent educational QA system with BERT-based architecture, multi-hop reasoning, and real-time query responses.",
    category: "machine-learning",
    highlightKeyword: "AI in Education",
    image: "/ai/ml3.png",
    technologies: [
      "Python",
      "PyTorch",
      "FastAPI",
      "React",
      "Hugging Face",
      "Elasticsearch",
      "Docker",
    ],
    demoUrl: "https://example.com/qa-demo",
    githubUrl: "https://github.com/example/qa-system",
    completionDate: "April 2023",
    features: [
      "Context-aware question answering",
      "Multi-hop reasoning",
      "Source attribution and confidence scoring",
      "Real-time student support",
      "Interactive learning interface",
      "Batch question handling",
    ],
  },

  {
    id: "ml-4",
    title: "AI detection dashboard report",
    description:
      "AI detection dashboard report for manage users and products and analytics.",
    category: "machine-learning",
    highlightKeyword: "Machine Learning",
    image: "/ml/m-5.png",
    technologies: ["Python", "TensorFlow", "PostgreSQL"],
    demoUrl: "https://example.com/demo",
    githubUrl: "https://github.com/example/project",
    completionDate: "August 2023",
    features: [
      "Real-time message delivery",
      "User presence detection",
      "Message history storage",
      "End-to-end encryption",
    ],
  },

  {
    id: "ml-5",
    title: "Data analysis dashboard report",
    description:
      "Data analysis dashboard report for manage users and products and analytics.",
    category: "machine-learning",
    highlightKeyword: "Machine Learning",
    image: "/ml/ml-6.png",
    technologies: [
      "Python",
      "PyTorch",
      "FastAPI",
      "Hugging Face",
      "PostgreSQL",
      "Docker",
    ],
    demoUrl: "https://example.com/sentiment-demo",
    githubUrl: "https://github.com/example/sentiment-analysis",
    completionDate: "June 2023",
    features: [
      "Multi-domain sentiment classification (92% accuracy)",
      "Sarcasm detection (85% accuracy)",
      "Real-time processing pipeline",
      "Aspect-based sentiment analysis",
      "REST API integration",
      "Custom visualization dashboard",
    ],
  },

  {
    id: "ml-6",
    title: "Data extraction and summarization",
    description:
      "Data extraction and summarization for manage users and products and analytics.",
    category: "machine-learning",
    highlightKeyword: "Natural Language Processing",
    image: "/ml/ml-7.png",
    technologies: [
      "Python",
      "TensorFlow",
      "spaCy",
      "NLTK",
      "Flask",
      "MongoDB",
      "Docker",
    ],
    demoUrl: "https://example.com/summarization-demo",
    githubUrl: "https://github.com/example/multilingual-summarization",
    completionDate: "May 2023",
    features: [
      "Cross-lingual summarization (5 languages)",
      "Abstractive and extractive summarization",
      "Language detection and preprocessing",
      "Custom quality metrics and evaluation",
      "Batch processing capability",
      "API integration",
    ],
  },

  {
    id: "ml-7",
    title: "Real-time QA system",
    description:
      "Real-time QA system for manage users and products and analytics.",
    category: "machine-learning",
    highlightKeyword: "AI in Education",
    image: "/ml/ml-8.png",
    technologies: [
      "Python",
      "PyTorch",
      "FastAPI",
      "React",
      "Hugging Face",
      "Elasticsearch",
      "Docker",
    ],
    demoUrl: "https://example.com/qa-demo",
    githubUrl: "https://github.com/example/qa-system",
    completionDate: "April 2023",
    features: [
      "Context-aware question answering",
      "Multi-hop reasoning",
      "Source attribution and confidence scoring",
      "Real-time student support",
      "Interactive learning interface",
      "Batch question handling",
    ],
  },
  {
    id: "cv-2",
    title: "Real-time Object Detection System",
    description:
      "Developed a cutting-edge real-time object detection system for autonomous vehicles that processes multiple camera feeds simultaneously with sub-millisecond latency. The system uses a custom YOLOv8 architecture optimized for edge deployment.",
    category: "deep-learning",
    highlightKeyword: "Machine Learning",
    image: "/ml/real-time.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "OpenCV",
      "TensorRT",
      "CUDA",
      "FastAPI",
      "Docker",
      "NVIDIA Jetson",
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2023",
    features: [
      "Real-time object detection (30+ FPS)",
      "Multi-camera synchronization",
      "Custom object classification (100+ classes)",
      "Distance estimation and tracking",
      "Weather condition adaptation",
    ],
  },
  {
    id: "cv-13",
    title: "Facial Emotion Recognition",
    description:
      "Built an advanced facial emotion recognition system that analyzes customer emotions in real-time across multiple retail locations. The system uses a custom CNN architecture with attention mechanisms for accurate emotion detection.",
    category: "deep-learning",
    highlightKeyword: "Machine Learning",
    image: "/ml/facial-emotion.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "OpenCV",
      "TensorRT",
      "FastAPI",
      "Docker",
      "AWS",
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2023",
    features: [
      "Real-time emotion detection (7 basic emotions)",
      "Multi-person tracking",
      "Age and gender estimation",
      "Attention level analysis",
      "Custom emotion intensity scoring",
    ],
  },
  {
    id: "cv-4",
    title: "Central AI Survellience System",
    description:
      "On Premise or Remote Deployment of Central AI Survellience System on Live Cam Streams",
    category: "deep-learning",
    highlightKeyword: "Machine Learning",
    image: "/ml/high-performance.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "OpenCV",
      "TensorRT",
      "FastAPI",
      "Docker",
      "AWS",
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2023",
    features: [
      "Sub-millisecond search time (0.50 ms)",
      "Support for 1M+ face embeddings",
      "Anti-spoofing measures",
      "Real-time monitoring",
      "Multi-factor authentication",
    ],
  },

  {
    id: "cv-5",
    title: "Medical Image Segmentation",
    description:
      "Created an advanced medical image segmentation system for accurate organ and tumor detection in CT and MRI scans. The system uses a custom U-Net architecture with attention mechanisms for precise segmentation.",
    category: "deep-learning",
    highlightKeyword: "Machine Learning",
    image: "/ml/medical-image.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "OpenCV",
      "TensorRT",
      "YOLOv8",
      "CUDA",
      "FastAPI",
      "Docker",
      "AWS",
      "HNSWLib",
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2023",
    features: [
      "Multi-organ segmentation",
      "Tumor detection and classification",
      "3D volume reconstruction",
      "Automated report generation",
      "Real-time processing",
    ],
  },
  {
    id: "cv-3",
    title: "Dashboard Report for Milions of Data",
    description:
      "Dashboard report for milions data for manage users and products and analytics.",
    category: "deep-learning",
    highlightKeyword: "Machine Learning",
    image: "/cv/cv-6.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "OpenCV",
      "TensorRT",
      "FastAPI",
      "Docker",
      "AWS",
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2023",
    features: [
      "",
    ],
  },
  {
    id: "cv-10",
    title: "AI Generated Chart System",
    description:
      "AI generated chart system for manage users and products and analytics.",
    category: "deep-learning",
    highlightKeyword: "Machine Learning",
    image: "/cv/cv-7.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "OpenCV",
      "TensorRT",
      "FastAPI",
      "Docker",
      "AWS",
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2023",
    features: [
      "Sub-millisecond search time (0.50 ms)",
      "Support for 1M+ face embeddings",
      "Anti-spoofing measures",
      "Real-time monitoring",
      "Multi-factor authentication",
    ],
  },
  {
    id: "cv-21",
    title: "Historical Blueprints & Engineering Drawing Digitizer",
    description:
      "This custom OCR system is designed to digitize and extract critical information from old, faded, or sepia-toned engineering drawings and blueprints. It accurately identifies and extracts handwritten annotations, dimensions, component labels, and revision numbers, converting them into searchable, structured digital data. This preserves valuable historical information, prevents loss due to physical degradation, and enables efficient search and integration with modern CAD/PLM systems.",
    category: "deep-learning",
    highlightKeyword: "Custom OCR, PLM Integration",
    image: "/dl/dl-1.png",
    technologies: [
      "Azure VMs",
      "PyTorch",
      "PostgreSQL",
      "TensorFlow",
      "PyTorch",
      "PaddleOCR",
      "Tesseract OCR",
      "Streamlit",
      "Python",
      "OpenCV",
      "Scikit-image",
      "FastAPI",
      "Trasnfer Learning",
      "Object Detection",
      "Image Classification"
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2025",
    features: [
      ""
    ],
  },
  {
    id: "cv-22",
    title: "Damaged Freight Label Processor",
    description:
      "Never lose a package to a bad label again. This specialized system is designed to rescue data from compromised shipping documents, whether they're wrinkled, smudged, or ripped. By accurately isolating and reading damaged text and barcodes, it provides uninterrupted data flow for inventory management and package routing, even under poor conditions.",
    category: "deep-learning",
    highlightKeyword: "Custom OCR, Image Restoration, Real-Time",
    image: "/dl/dl-2.png",
    technologies: [
      "Python",
      "OpenCV",
      "PyTorch",
      "Customly Trained Hybrid Transformer",
      "Scikit-image",
      "PaddleOCR",
      "Custom Data",
      "Offline Custom Server for Deployment",
      "FastAPI",
      "Object Detection",
      "Image Classification"
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2025",
    features: [
      ""
    ],
  },
  {
    id: "cv-6",
    title: "Medical Image Segmentation",
    description:
      "Created an advanced medical image segmentation system for accurate organ and tumor detection in CT and MRI scans. The system uses a custom U-Net architecture with attention mechanisms for precise segmentation.",
    category: "deep-learning",
    highlightKeyword: "Machine Learning",
    image: "/cv/cv-8.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "OpenCV",
      "TensorRT",
      "YOLOv8",
      "CUDA",
      "FastAPI",
      "Docker",
      "AWS",
      "HNSWLib",
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2023",
    features: [
      "Multi-organ segmentation",
      "Tumor detection and classification",
      "3D volume reconstruction",
      "Automated report generation",
      "Real-time processing",
    ],
  },

  {
    id: "nlp-1",
    title: "Sentimail",
    description:
      "A smart NLP tool that automatically analyzes incoming customer support emails and classifies them into Positive, Negative, or Neutral sentiment.",
    category: "natural-language-processing",
    highlightKeyword: "NLP",
    image: "/ai/nlp.png",
    technologies: ["Python", "TensorFlow", "PostgreSQL"],
    demoUrl: "https://example.com/demo",
    githubUrl: "https://github.com/example/project",
    completionDate: "August 2023",
    features: [
      "Real-time message delivery",
      "User presence detection",
      "Message history storage",
      "End-to-end encryption",
    ],
  },

  {
    id: "nlp-2",
    title: "Advanced Sentiment Analysis System",
    description:
      "A state-of-the-art sentiment analysis system processing 1M+ customer reviews daily with 95% accuracy. Features custom BERT architecture, real-time analysis, multi-language support, and emotion detection for improved customer service.",
    category: "natural-language-processing",
    highlightKeyword: "NLP",
    image: "/ai/nlp1.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "Hugging Face Transformers",
      "FastAPI",
      "Redis",
      "Docker",
      "AWS (SageMaker, EC2)",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Real-time sentiment analysis with 200ms response time",
      "Multi-language support (English, Spanish, French, German)",
      "Aspect-based sentiment analysis for detailed feedback",
      "Custom emotion detection for 27 distinct emotions",
      "Automated response generation for customer service",
    ],
  },
  {
    id: "nlp-3",
    title: "Multilingual Text Summarization",
    description:
      "A powerful summarization system for generating concise, informative summaries across 8 languages. Supports abstractive/extractive modes, plagiarism detection, and custom length summaries for cross-platform use.",
    category: "natural-language-processing",
    highlightKeyword: "NLP",
    image: "/ai/nlp2.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "Transformers",
      "FastAPI",
      "MongoDB",
      "Docker",
      "AWS",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Multi-language summarization (8 languages)",
      "Abstractive and extractive summarization modes",
      "Custom length control for different platforms",
      "Key point extraction and highlighting",
      "Plagiarism detection and prevention",
    ],
  },
  {
    id: "nlp-4",
    title: "Question Answering System",
    description:
      "An advanced question answering system using retrieval-augmented generation and knowledge graph integration. Delivers fast, accurate answers across complex multi-document datasets.",
    category: "natural-language-processing",
    highlightKeyword: "NLP",
    image: "/ai/nlp3.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "Transformers",
      "Neo4j",
      "FastAPI",
      "Redis",
      "Docker",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Context-aware answer generation",
      "Multi-document reasoning",
      "Custom knowledge graph integration",
      "Real-time answer validation",
      "User feedback learning system",
    ],
  },
  {
    id: "nlp-5",
    title: "AI-Powered Resume Screening & Ranking System",
    description:
      "Built an AI-driven resume parsing and ranking platform that uses semantic similarity to match candidate resumes with job descriptions, reducing manual screening time by 80%.",
    category: "natural-language-processing",
    highlightKeyword: "NLP",
    image: "/nlp/nlp5.png",
    technologies: [
      "Python 3.9",
      "Hugging Face Transformers",
      "spaCy",
      "FastAPI",
      "Streamlit",
      "MongoDB",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Resume-to-structured-data parser",
      "Skill, education, experience extraction",
      "Semantic JD-resume similarity scoring",
      "Automated candidate ranking",
      "Bias mitigation and fairness audits",
    ],
  },
  {
    id: "nlp-6",
    title: "Contract Clause Extraction & Compliance Checker",
    description:
      "Developed a clause extraction and validation engine that automates legal contract review and ensures compliance with internal and regulatory standards.",
    category: "natural-language-processing",
    highlightKeyword: "NLP",
    image: "/nlp/nlp6.png",
    technologies: [
      "Python 3.8",
      "spaCy",
      "BiLSTM-CRF",
      "FastAPI",
      "PostgreSQL",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Clause classification and segmentation",
      "Compliance validation engine",
      "Automated risk scoring",
      "Redline clause comparison",
      "Document chunking for large-scale parsing",
    ],
  },
  {
    id: "nlp-7",
    title: "Voice-to-Text Transcription and NLP Insight Engine",
    description:
      "Built a real-time voice-to-text and NLP engine for contact centers that transcribes calls, extracts insights, classifies intent, and generates call summaries for QA and training.",
    category: "natural-language-processing",
    highlightKeyword: "NLP",
    image: "/nlp/nlp7.png",
    technologies: [
      "Python 3.8",
      "Hugging Face Transformers",
      "Google Cloud Speech",
      "FastAPI",
      "PostgreSQL",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Real-time transcription with diarization",
      "Intent and sentiment analysis",
      "Call summarization via TextRank + Transformers",
      "QA flagging and performance analytics",
      "REST API for call insights",
    ],
  },
  {
    id: "nlp-8",
    title: "Named Entity Linking (NEL) for Scientific Documents",
    description:
      "Implemented an advanced NEL system that disambiguates and links scientific entities in academic texts to external knowledge bases like PubMed and WikiData, boosting document retrieval and researcher productivity.",
    category: "natural-language-processing",
    highlightKeyword: "NLP",
    image: "/nlp/nlp8.png",
    technologies: ["Python 3.9", "SciBERT", "Faiss", "FastAPI", "Neo4j"],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Scientific NER with contextual disambiguation",
      "Knowledge base mapping (PubMed, WikiData)",
      "Ontology-aware entity resolution",
      "Entity embeddings via Wikipedia2Vec",
      "Real-time document enrichment API",
    ],
  },

  {
    id: "llm-1",
    title: "SmartLegalBot – AI Legal Assistant for Contract Review",
    description:
      "SmartLegalBot is an AI-powered assistant that helps users review legal contracts, highlight risky clauses, suggest simplified rewrites, and answer basic legal queries — all using a fine-tuned LLM trained on legal documents.",
    category: "multi-modal",
    highlightKeyword: "LLM",
    image: "/ai/llm.png",
    technologies: ["Node.js", "Socket.io", "PostgreSQL"],
    demoUrl: "https://example.com/demo",
    githubUrl: "https://github.com/example/project",
    completionDate: "August 2023",
    features: [
      "Real-time message delivery",
      "User presence detection",
      "Message history storage",
      "End-to-end encryption",
    ],
  },

  {
    id: "llm-2",
    title: "Custom LLM Development",
    description:
      "Developed a custom large language model from scratch, optimized for enterprise applications. The model was trained on domain-specific data and fine-tuned for various business use cases, achieving state-of-the-art performance while maintaining efficiency.",
    category: "multi-modal",
    highlightKeyword: "LLM",
    image: "/ai/llm1.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "DeepSpeed",
      "PEFT",
      "LoRA",
      "FastAPI",
      "Docker",
      "NVIDIA A100 GPUs",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Custom architecture with 7B parameters",
      "Domain-specific pre-training",
      "Multi-task learning capabilities",
      "Efficient inference optimization",
      "Automated model monitoring",
      "Distributed training pipeline",
      "Model quantization and optimization",
      "Automated evaluation system",
      "Real-time deployment pipeline",
    ],
  },
  {
    id: "llm-3",
    title: "LLM Fine-tuning Framework",
    description:
      "Created a comprehensive framework for fine-tuning large language models efficiently. The framework supports various fine-tuning methods, including LoRA, PEFT, and full fine-tuning, with automated optimization and monitoring capabilities.",
    category: "multi-modal",
    highlightKeyword: "LLM",
    image: "llm/l3.png",
    technologies: [
      "Python 3.8+",
      "PyTorch",
      "Transformers",
      "DeepSpeed",
      "PEFT",
      "LoRA",
      "FastAPI",
      "Docker",
      "AWS",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Multiple fine-tuning methods",
      "Automated hyperparameter optimization",
      "Model performance monitoring",
      "Distributed training support",
      "Automated evaluation pipeline",
    ],
  },
  {
    id: "llm-4",
    title: "RAG-Based Enterprise Knowledge Assistant",
    description:
      "Built a context-aware RAG assistant to answer internal employee queries by grounding LLM responses in enterprise documents, policies, and knowledge bases.",
    category: "multi-modal",
    highlightKeyword: "RAG",
    image: "llm/l4.png",
    technologies: [
      "Python 3.9",
      "Hugging Face Transformers",
      "LangChain",
      "FAISS",
      "Pinecone",
      "FastAPI",
      "Docker",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Hybrid vector & keyword search (BM25 + FAISS)",
      "Source-linked, context-aware answers",
      "Slack/MS Teams chat integration",
      "Live document re-indexing",
    ],
  },
  {
    id: "llm-5",
    title: "Multilingual LLM Chatbot for Customer Support",
    description:
      "Created a real-time multilingual LLM chatbot capable of handling support queries in 15+ languages with sentiment-aware response tuning.",
    category: "multi-modal",
    highlightKeyword: "Multilingual",
    image: "llm/l5.png",
    technologies: [
      "Python 3.8",
      "PyTorch",
      "MarianMT",
      "Redis",
      "FastAPI",
      "Kubernetes",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Multilingual LLM responses",
      "Human hand-off mechanism",
      "Product/order FAQ integration",
      "Context memory per user",
      "Sentiment-aware tone modulation",
    ],
  },
  {
    id: "llm-6",
    title: "LLM-based Content Generation Engine",
    description:
      "Engineered a scalable content generation pipeline for SEO blogs, product descriptions, and brand copy using GPT-J and T5 models.",
    category: "multi-modal",
    highlightKeyword: "Content",
    image: "/llm/l6.png",
    technologies: [
      "Python 3.8",
      "Hugging Face Transformers",
      "GPT-J",
      "T5",
      "Gradio",
      "Docker",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Brand tone and style customization",
      "SEO keyword-aware prompt generation",
      "Bulk CSV/Excel support",
      "Plagiarism check integration",
      "Real-time editing and feedback",
    ],
  },
  {
    id: "llm-7",
    title: "Autonomous Research Agent using LLMs",
    description:
      "Developed an autonomous LLM agent for literature reviews with semantic paper search, PDF summarization, and research graph generation.",
    category: "multi-modal",
    highlightKeyword: "Research",
    image: "/llm/l7.png",
    technologies: ["Python 3.10", "LangChain", "GPT API", "PyMuPDF", "Neo4j"],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "Semantic search across academic papers",
      "PDF auto-summary pipeline",
      "Research graph creation (Neo4j)",
      "Clustered citation mapping",
      "Autonomous topic synthesis",
    ],
  },
  {
    id: "llm-8",
    title: "LLM-Powered Code Generation & Review Assistant",
    description:
      "Built an AI coding assistant that generates boilerplate code, reviews PRs, and flags anti-patterns with LLM-powered insights.",
    category: "multi-modal",
    highlightKeyword: "Code",
    image: "/llm/l8.png",
    technologies: [
      "Python 3.9",
      "CodeLLaMA",
      "GitHub API",
      "FastAPI",
      "Docker",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "PR review automation",
      "Code generation from task descriptions",
      "Multi-language support",
      "Slack and GitHub integration",
      "Anti-pattern and code smell detection",
    ],
  },
  {
    id: "time-series-1",
    title: "Forecasting Application for Fisheries Production",
    description:
      "Prediction of fisheries production to provide insights on fisheries economy.",
    category: "time-series",
    highlightKeyword: "Industry: Fisheries, Agriculture",
    image: "/time-series/time-series-1.jpeg",
    technologies: [
      "Python 3.9",
      "Prophet",
      "SARIMA",
      "XGBoost",
      "FastAPI",
      "Docker",
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      ""
    ],
  },
  {
    id: "time-series-2",
    title: "Real-time Stock Market Prediction",
    description:
      "Real-time stock market Prediction for managing stock profile.",
    category: "time-series",
    highlightKeyword: "Industry: Stock Market, Trading",
    image: "/time-series/time-series-2.png",
    technologies: [
      "Python 3.9",
      "ARIMA",
      "CatBoost",
      "LightGBM",
      "Flask",
      "Docker",
      "Postgres",
    ],
    demoUrl: "#",
    githubUrl: "#",
    completionDate: "August 2024",
    features: [
       "Will disclose in request.",
    ],
  },
  {
    id: "time-series-3",
    title: "Predictive Maintenance Platform",
    description:
      "Uses time series sensor data from critical machines to forecast RUL.",
    category: "time-series",
    highlightKeyword: "Industry: Manufacturing, Energy, IIoT",
    image: "/time-series/time-series-3.jpeg",
    technologies: [
      "Python 3.10",
      "Pandas",
      "Scikit-learn",
      "MLflow",
      "LSTMs",
      "GRUs",
      "TensorFlow",
      "PyTorch",
      "Gradient Boosting",
      "Grafana",
      "Django",
      "React",
      "Amazon S3"
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      ""
    ],
  },
   {
    id: "time-series-4",
    title: "Automated Inventory Demand Predictor",
    description:
      "Predicts exactly how much product customers will buy at different times and locations.",
    category: "time-series",
    highlightKeyword: "Retail, E-commerce, SCM",
    image: "/time-series/time-series-4.jpeg",
    technologies: [
      "FastAPI",
      "Custom Dashboard with Streamlit",
      "Custom service integrated with email",
      "AWS Lambda",
      "AWS Step Functions",
      "Docker",
      "MLflow",
      "Exponential Smoothing",
      "Auto-ARIMA",
      "Prophetfrom Meta",
      "CatBoost",
      "TimescaleDB",
      "Warehouse Management Systems"
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      "PR review automation",
      "Code generation from task descriptions",
      "Multi-language support",
      "Slack and GitHub integration",
      "Anti-pattern and code smell detection",
    ],
  },
   {
    id: "reinforcement-learning-1",
    title: "Dynamic Inventory and Production Planning for a Supply Chain",
    description:
      "This project is a Multi Agent Reinforcement Learning (MARL) system designed to automatically optimize complex supply chains. It uses cooperating AI agents, a Production Agent at the factory and Distribution Agents at the warehouses, to make real time decisions on what to produce and where to ship it. The goal is to minimize total operational costs production holding and transport while maximizing customer fulfillment avoiding stockouts under volatile demand.",
    category: "reinforcement-learning",
    highlightKeyword: "Multi Agent Reinforcement Learning",
    image: "/rl/rl-1.jpeg",
    technologies: [
      "PyTorch",
      "Stable Baselines3",
      "Pandas",
      "Seaborn",
      "AWS Step Functions",
      "Docker",
      "Flask",
      "Typescript"
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      ""
    ],
  },
  {
    id: "reinforcement-learning-2",
    title: "Adaptive Process Control for Chemical/Manufacturing Plants",
    description:
      "This project develops a Reinforcement Learning RL agent to serve as a self learning advanced controller for complex industrial equipment. Unlike rigid traditional controllers, the RL agent dynamically adjusts system parameters like temperature and flow in real time. The agent is trained to maximize product quality and yield while minimizing energy consumption and strictly adhering to all safety constraints. The final deliverable is a high fidelity simulation demonstrating the RL agent's superior efficiency and throughput compared to a benchmark control system.",
    category: "reinforcement-learning",
    highlightKeyword: "Adaptive Process Control",
    image: "/rl/rl-2.jpg",
    technologies: [
      "PyTorch",
      "Ray RLlib",
      "Python",
      "Plotly",
      "Azure DevOps",
      "Docker",
      "NumPy",
      "FastAPI"
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      ""
    ],
  },
    {
    id: "reinforcement-learning-3",
    title: "Conveyor Speed Optimization by RL Agent in Real Time",
    description:
      "This project tackles a common industrial control dilemma: finding the sweet spot between saving energy and boosting production. We use foundational RL algorithms to train a smart system to dynamically manage conveyor belt speed in real-time, ensuring we get the maximum amount of product moved with the minimum possible energy usage.",
    category: "reinforcement-learning",
    highlightKeyword: "RL Agent, Manufacturing, Conveyor Belt",
    image: "/rl/rl-3.png",
    technologies: [
      "Q-Learning",
      "SARSA",
      "Python",
      "Physics",
      "Simulation"
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      ""
    ],
  },
   {
    id: "reinforcement-learning-4",
    title: "RL-Powered Personal E-Commerce Navigator",
    description:
      "Traditional e-commerce optimization (like simple A/B testing or static recommendation engines) focuses on maximizing the immediate click or purchase. This RL approach introduces a long-term goal: the agent learns that sometimes, not showing a high-value product right now, or even offering a small discount, is the optimal action because it builds trust, prevents customer burnout, and maximizes the customer's total spending over the next year (CLV).",
    category: "reinforcement-learning",
    highlightKeyword: "E-Commerce, RL Shopping Assistant Agent",
    image: "/rl/rl-4.png",
    technologies: [
      "Deep Q-Network (DQN)",
      "Policy Gradient (A2C/A3C)",
      "Python",
      "Simulation"
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      ""
    ],
  },
  {
    id: "distillation-1",
    title: "Mobile-based Custom Product Recognition",
    description:
      "Distill a large image classification model for deployment in a mobile app, allowing users to instantly identify products by taking a picture. This improves the customer experience with less lag time.",
    category: "distillation",
    highlightKeyword: "E-Commerce, On-Device AI",
    image: "/distill/distil-1.png",
    technologies: [
      "PyTorch",
      "TFLite",
      "ONNX",
      "Android Studio",
      "Python",
      "MobileNet"
    ],
    demoUrl: "",
    githubUrl: "",
    completionDate: "",
    features: [
      ""
    ],
  },
];

export const sectionInfo = {
  "machine-learning": {
    title: "Machine Learning",
    description:
      "Machine Learning projects with a focus on scalability and performance.",
  },

  "computer-vision": {
    title: "Computer Vision",
    description:
      "Computer Vision projects with a range of features and capabilities.",
  },
  nlp: {
    title: "NLP",
    description:
      "Have a look on our NLP projects with a focus on user experience and design.",
  },
  llm: {
    title: "LLM",
    description:
      "Here are details of our LLM projects with large scale deployment and proof of concepts.",
  },
  "deep-learning": {
    title: "Deep Learning",
    description:
      "Our best expertise projects are from Deep Learning.",
  },
  api: {
    title: "API Projects",
    description:
      "Discover the API projects with a focus on scalability and performance.",
  },
  "time-series": {
    title: "Time Series Forecasting",
    description:
      "We have delivered highly efficient Time-Series Forecasting projects with high accuracy in prediction.",
  },
};


